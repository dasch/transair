#!/usr/bin/env ruby

require 'bundler/setup'
require 'thor'

$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))
require 'transair/client'

class TransairClient < Thor
  desc "sync", "synchronize strings"
  option :url, required: true
  def sync
    client = Transair::Client.build(url: options[:url])
    client.sync!
  end

  desc "translate", "translate a key"
  option :url, required: true
  option :key, required: true
  option :version, required: true
  option :locale, required: true
  option :translation, required: true
  def translate
    path = [
      "/strings",
      options[:key],
      options[:version],
      "translations",
      options[:locale]
    ].join("/")

    connection = Faraday.new(url: options[:url])
    connection.put(path, options[:translation])
  end

  desc "ls", "list versions of a key"
  option :url, required: true
  option :key, required: true
  def ls
    path = "/strings/#{options[:key]}"

    connection = Faraday.new(url: options[:url])
    response = connection.get(path)

    if response.status != 200
      raise "failed"
    end

    versions = JSON.parse(response.body)
    versions.each do |version, value|
      puts "#{version}: #{value}"
    end
  end
end

TransairClient.start(ARGV)
